{"ast":null,"code":"var _jsxFileName = \"/Users/vladsh/TOP/repos/instagram-react12/src/components/profile/ProfileTabs.js\";\nimport { Divider, Hidden, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { GridIcon, SaveIcon } from \"../../icons\";\nimport { useProfileTabsStyles } from \"../../styles\";\nimport GridPost from \"../shared/GridPost\";\n\nfunction ProfileTabs({\n  isOwner,\n  user\n}) {\n  const classes = useProfileTabsStyles();\n  const [value, setValue] = React.useState(0);\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: (_, value) => setValue(value),\n    centered: true,\n    classes: {\n      indicator: classes.tabsIndicator\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    icon: React.createElement(\"span\", {\n      className: classes.postsIconLarge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }),\n    label: \"POSTS\",\n    classes: {\n      root: classes.tabRoot,\n      labelIcon: classes.tabLabelIcon,\n      wrapper: classes.tabWrapper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), isOwner && React.createElement(Tab, {\n    icon: React.createElement(\"span\", {\n      className: classes.savedIconLarge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }),\n    label: \"SAVED\",\n    classes: {\n      root: classes.tabRoot,\n      labelIcon: classes.tabLabelIcon,\n      wrapper: classes.tabWrapper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: (_, value) => setValue(value),\n    centered: true,\n    className: classes.tabs,\n    classes: {\n      indicator: classes.tabsIndicator\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    icon: React.createElement(GridIcon, {\n      fill: value === 0 ? \"#3897f0\" : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    classes: {\n      root: classes.tabRoot\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), isOwner && React.createElement(Tab, {\n    icon: React.createElement(SaveIcon, {\n      fill: value === 1 ? \"#3897f0\" : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    classes: {\n      root: classes.tabRoot\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, user.posts.length === 0 && React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), value === 0 && React.createElement(ProfilePosts, {\n    user: user,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), value === 1 && React.createElement(SavedPosts, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n}\n\nconst ProfilePosts = ({\n  user,\n  isOwner\n}) => {\n  const classes = useProfileTabsStyles();\n\n  if (user.posts.length === 0) {\n    return React.createElement(\"section\", {\n      className: classes.profileSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.noContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.uploadPhotoIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, isOwner ? \"Upload a Photo\" : \"No Photos\")));\n  }\n\n  return React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, users.posts.map(post => React.createElement(GridPost, {\n    key: post.id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))));\n};\n\nconst SavedPosts = ({\n  user\n}) => {\n  const classes = useProfileTabsStyles();\n  return React.createElement(\"section\", {\n    className: classes.savedPostsSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.noContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.savePhotoIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Typography, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Save photos and videos that you want to see again. No one is notified, and only you can see what you've saved.\")));\n};\n\nexport default ProfileTabs;","map":{"version":3,"sources":["/Users/vladsh/TOP/repos/instagram-react12/src/components/profile/ProfileTabs.js"],"names":["Divider","Hidden","Tab","Tabs","Typography","React","GridIcon","SaveIcon","useProfileTabsStyles","GridPost","ProfileTabs","isOwner","user","classes","value","setValue","useState","section","_","indicator","tabsIndicator","postsIconLarge","root","tabRoot","labelIcon","tabLabelIcon","wrapper","tabWrapper","savedIconLarge","tabs","undefined","posts","length","ProfilePosts","profileSection","noContent","uploadPhotoIcon","article","postContainer","users","map","post","id","SavedPosts","savedPostsSection","savePhotoIcon"],"mappings":"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","sourcesContent":["import { Divider, Hidden, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { GridIcon, SaveIcon } from \"../../icons\";\nimport { useProfileTabsStyles } from \"../../styles\";\nimport GridPost from \"../shared/GridPost\";\n\nfunction ProfileTabs({ isOwner, user }) {\n  const classes = useProfileTabsStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <>\n      <section className={classes.section}>\n        <Hidden xsDown>\n          <Divider />\n        </Hidden>\n        <Hidden xsDown>\n          <Tabs\n            value={value}\n            onChange={(_, value) => setValue(value)}\n            centered\n            classes={{\n              indicator: classes.tabsIndicator,\n            }}\n          >\n            <Tab\n              icon={<span className={classes.postsIconLarge} />}\n              label=\"POSTS\"\n              classes={{\n                root: classes.tabRoot,\n                labelIcon: classes.tabLabelIcon,\n                wrapper: classes.tabWrapper,\n              }}\n            />\n            {isOwner && (\n              <Tab\n                icon={<span className={classes.savedIconLarge} />}\n                label=\"SAVED\"\n                classes={{\n                  root: classes.tabRoot,\n                  labelIcon: classes.tabLabelIcon,\n                  wrapper: classes.tabWrapper,\n                }}\n              />\n            )}\n          </Tabs>\n        </Hidden>\n        <Hidden smUp>\n          <Tabs\n            value={value}\n            onChange={(_, value) => setValue(value)}\n            centered\n            className={classes.tabs}\n            classes={{\n              indicator: classes.tabsIndicator,\n            }}\n          >\n            <Tab\n              icon={<GridIcon fill={value === 0 ? \"#3897f0\" : undefined} />}\n              classes={{ root: classes.tabRoot }}\n            />\n            {isOwner && (\n              <Tab\n                icon={<SaveIcon fill={value === 1 ? \"#3897f0\" : undefined} />}\n                classes={{ root: classes.tabRoot }}\n              />\n            )}\n          </Tabs>\n        </Hidden>\n        <Hidden smUp>{user.posts.length === 0 && <Divider />}</Hidden>\n        {value === 0 && <ProfilePosts user={user} isOwner={isOwner} />}\n        {value === 1 && <SavedPosts user={user} />}\n      </section>\n    </>\n  );\n}\nconst ProfilePosts = ({ user, isOwner }) => {\n  const classes = useProfileTabsStyles();\n  if (user.posts.length === 0) {\n    return (\n      <section className={classes.profileSection}>\n        <div className={classes.noContent}>\n          <div className={classes.uploadPhotoIcon} />\n          <Typography variant=\"h4\">\n            {isOwner ? \"Upload a Photo\" : \"No Photos\"}\n          </Typography>\n        </div>\n      </section>\n    );\n  }\n  return (\n    <article className={classes.article}>\n      <div className={classes.postContainer}>\n        {users.posts.map((post) => (\n          <GridPost key={post.id} post={post} />\n        ))}\n      </div>\n    </article>\n  );\n};\n\nconst SavedPosts = ({ user }) => {\n  const classes = useProfileTabsStyles();\n  return (\n    <section className={classes.savedPostsSection}>\n      <div className={classes.noContent}>\n        <div className={classes.savePhotoIcon} />\n        <Typography variant=\"h4\">Save</Typography>\n        <Typography align=\"center\">\n          Save photos and videos that you want to see again. No one is notified,\n          and only you can see what you've saved.\n        </Typography>\n      </div>\n    </section>\n  );\n};\nexport default ProfileTabs;\n"]},"metadata":{},"sourceType":"module"}